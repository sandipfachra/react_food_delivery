{"ast":null,"code":"var _jsxFileName = \"E:\\\\reactjs\\\\food_proj\\\\src\\\\components\\\\Cart\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport classes from './Checkout.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === '';\n\nconst isFiveChars = value => value.trim().length === 6;\n\nconst Checkout = props => {\n  _s();\n\n  const [formInputsValidity, setFormInputValidity] = useState({\n    name: true,\n    Street: true,\n    city: true,\n    postalCode: true\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalCodeInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostalCode = postalCodeInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostalCodeIsValid = !isFiveChars(enteredPostalCode);\n    setFormInputValidity({\n      name: enteredNameIsValid,\n      Street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postalCode: enteredPostalCodeIsValid\n    });\n    const formIsValide = enteredNameIsValid && enteredStreetIsValid && enteredCityIsValid && enteredPostalCodeIsValid;\n\n    if (!formIsValide) {\n      return;\n    } // submit Chart data \n\n\n    props.onConfirm({\n      name: enteredName\n    });\n  };\n\n  const nameControlClasses = `${classes.control} ${formInputsValidity.name ? '' : classes.invalid}`;\n  const streetControlClasses = `${classes.control} ${formInputsValidity.street ? '' : classes.invalid}`;\n  const cityControlClasses = `${classes.control} ${formInputsValidity.city ? '' : classes.invalid}`;\n  const postalCodecontrolClasses = `${classes.control} ${formInputsValidity.postalcode ? '' : classes.invalid}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), !formInputsValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter valid name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: streetControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), !formInputsValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter valid sreet!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 44\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: postalCodecontrolClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalCodeInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), !formInputsValidity.postalcode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter valid postl code (6 character)!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 49\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cityControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), !formInputsValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter valid city!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Checkout, \"WrzESaSDZk533xi+c3b4ic0Y6fA=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["E:/reactjs/food_proj/src/components/Cart/Checkout.js"],"names":["useRef","useState","classes","isEmpty","value","trim","isFiveChars","length","Checkout","props","formInputsValidity","setFormInputValidity","name","Street","city","postalCode","nameInputRef","streetInputRef","postalCodeInputRef","cityInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostalCode","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredCityIsValid","enteredPostalCodeIsValid","formIsValide","onConfirm","nameControlClasses","control","invalid","streetControlClasses","street","cityControlClasses","postalCodecontrolClasses","postalcode","form","actions","onCancel","submit"],"mappings":"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","sourcesContent":["import {useRef, useState} from 'react';\r\nimport classes from './Checkout.module.css';\r\n\r\nconst isEmpty = value => value.trim() === '';\r\nconst isFiveChars = value => value.trim().length === 6;\r\n\r\nconst Checkout = (props) => {\r\n    const [formInputsValidity, setFormInputValidity] = useState({\r\n        name: true,\r\n        Street: true,\r\n        city: true,\r\n        postalCode: true\r\n    });\r\n\r\n    const nameInputRef = useRef();\r\n    const streetInputRef = useRef();\r\n    const postalCodeInputRef = useRef();\r\n    const cityInputRef = useRef();\r\n\r\n    const confirmHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const enteredName = nameInputRef.current.value;\r\n        const enteredStreet = streetInputRef.current.value;\r\n        const enteredPostalCode = postalCodeInputRef.current.value;\r\n        const enteredCity = cityInputRef.current.value;\r\n\r\n        const enteredNameIsValid = !isEmpty(enteredName);\r\n        const enteredStreetIsValid = !isEmpty(enteredStreet);\r\n        const enteredCityIsValid = !isEmpty(enteredCity);\r\n        const enteredPostalCodeIsValid = !isFiveChars(enteredPostalCode);\r\n\r\n        setFormInputValidity({\r\n            name:enteredNameIsValid,\r\n            Street:enteredStreetIsValid,\r\n            city:enteredCityIsValid,\r\n            postalCode:enteredPostalCodeIsValid\r\n        });\r\n\r\n        const formIsValide = enteredNameIsValid && enteredStreetIsValid && enteredCityIsValid && enteredPostalCodeIsValid;\r\n\r\n        if (!formIsValide) {\r\n            return;\r\n        }\r\n\r\n        // submit Chart data \r\n        props.onConfirm({\r\n          name:enteredName\r\n        })\r\n};\r\n        const nameControlClasses = `${classes.control} ${\r\n            formInputsValidity.name ? '' :classes.invalid\r\n        }`;\r\n        const streetControlClasses = `${classes.control} ${\r\n            formInputsValidity.street? '' :classes.invalid\r\n        }`;\r\n        const cityControlClasses = `${classes.control} ${\r\n            formInputsValidity.city ? '' :classes.invalid\r\n        }`;\r\n        const postalCodecontrolClasses = `${classes.control} ${\r\n            formInputsValidity.postalcode ? '' :classes.invalid\r\n        }`;\r\n\r\n\r\n    return (\r\n        <form className={classes.form} onSubmit={confirmHandler}>\r\n          <div className={nameControlClasses}>\r\n            <label htmlFor='name'>Your Name</label>\r\n            <input type='text' id='name' ref={nameInputRef} />\r\n            {!formInputsValidity.name && <p>Please enter valid name!</p>}\r\n          </div>\r\n          <div className={streetControlClasses}>\r\n            <label htmlFor='street'>Street</label>\r\n            <input type='text' id='street' ref={streetInputRef}/>\r\n            {!formInputsValidity.street && <p>Please enter valid sreet!</p>}\r\n          </div>\r\n          <div className={postalCodecontrolClasses}>\r\n            <label htmlFor='postal'>Postal Code</label>\r\n            <input type='text' id='postal' ref={postalCodeInputRef} />\r\n            {!formInputsValidity.postalcode && (<p>Please enter valid postl code (6 character)!</p>)}\r\n          </div>\r\n          <div className={cityControlClasses}>\r\n            <label htmlFor='city'>City</label>\r\n            <input type='text' id='city' ref={cityInputRef} />\r\n            {!formInputsValidity.city && <p>Please enter valid city!</p>}\r\n          </div>\r\n          <div className={classes.actions}>\r\n            <button type='button' onClick={props.onCancel}>\r\n              Cancel\r\n            </button>\r\n            <button className={classes.submit}>Confirm</button>\r\n          </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Checkout;"]},"metadata":{},"sourceType":"module"}
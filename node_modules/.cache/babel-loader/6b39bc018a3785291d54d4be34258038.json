{"ast":null,"code":"var _jsxFileName = \"E:\\\\reactjs\\\\food_proj\\\\src\\\\components\\\\Cart\\\\Cart.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from 'react';\nimport Modal from '../UI/Modal';\nimport CartItem from '../Cart/CartItem';\nimport classes from './Cart.module.css';\nimport CartContext from '../../store/cart-context';\nimport Checkout from './Checkout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const [isCheckout, setIsCheckout] = useState(false);\n  const cartCtx = useContext(CartContext);\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemRemoveHandler = id => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemAddHandler = item => {\n    cartCtx.addItem(item);\n  };\n\n  const orderHandler = () => {\n    setIsCheckout(true);\n  };\n\n  const submitOrderHandler = userData => {\n    fetch('https://react-food-proj-default-rtdb.firebaseio.com/meals.json', {\n      method: 'POST',\n      body: JSON.stringify({})\n    });\n  };\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes['cart-items'],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n\n  const modalActions = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.actions,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes['button--alt'],\n      onClick: props.onClose,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes['button'],\n      onClick: orderHandler,\n      children: \"Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose,\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), isCheckout && /*#__PURE__*/_jsxDEV(Checkout, {\n      onConfirm: submitOrderHandler,\n      onCancel: props.onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), !isCheckout && modalActions]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Cart, \"h+sIjGF0PwOLirwEDh4q+RICsX0=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["E:/reactjs/food_proj/src/components/Cart/Cart.js"],"names":["useContext","useState","Modal","CartItem","classes","CartContext","Checkout","Cart","props","isCheckout","setIsCheckout","cartCtx","totalAmount","toFixed","hasItems","items","length","cartItemRemoveHandler","id","removeItem","cartItemAddHandler","item","addItem","orderHandler","submitOrderHandler","userData","fetch","method","body","JSON","stringify","cartItems","map","name","amount","price","bind","modalActions","actions","onClose","total"],"mappings":"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","sourcesContent":["import {useContext, useState} from 'react';\r\nimport Modal from '../UI/Modal';\r\nimport CartItem from '../Cart/CartItem';\r\nimport classes from './Cart.module.css';\r\nimport CartContext from '../../store/cart-context';\r\nimport Checkout from './Checkout';\r\n\r\nconst Cart = (props) => {\r\n    const [isCheckout, setIsCheckout] = useState(false);\r\n    const cartCtx = useContext(CartContext)\r\n\r\n    const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\r\n    const hasItems = cartCtx.items.length > 0;\r\n\r\n    const cartItemRemoveHandler = id => {\r\n        cartCtx.removeItem(id);\r\n    };\r\n\r\n    const cartItemAddHandler = item => {\r\n        cartCtx.addItem(item);\r\n    };\r\n\r\n    const orderHandler = () => {\r\n        setIsCheckout(true);\r\n    };\r\n\r\n    const submitOrderHandler = (userData) => {\r\n        fetch('https://react-food-proj-default-rtdb.firebaseio.com/meals.json', {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                \r\n            })\r\n        })\r\n        \r\n    };\r\n\r\n    const cartItems = (\r\n    <ul className={classes['cart-items']}>\r\n        {cartCtx.items.map((item) => (\r\n            <CartItem \r\n                key={item.id}\r\n                name={item.name}\r\n                amount = {item.amount}\r\n                price = {item.price}\r\n                onRemove={cartItemRemoveHandler.bind(null, item.id)}\r\n                onAdd={cartItemAddHandler.bind(null, item)}\r\n            />\r\n        ))}\r\n    </ul>\r\n    );\r\n\r\n    const modalActions = (\r\n        <div className={classes.actions}>\r\n        <button className={classes['button--alt']} onClick={props.onClose}>Close</button>\r\n        {hasItems && (<button className={classes['button']} onClick={orderHandler}>Order</button>)}\r\n    </div>\r\n    );\r\n\r\n    return (\r\n        <Modal onClose={props.onClose}>\r\n            {cartItems}\r\n            <div className={classes.total}>\r\n                <span>Total Amount</span>\r\n                <span>{totalAmount}</span>\r\n            </div>\r\n            {isCheckout && (\r\n            <Checkout onConfirm={submitOrderHandler } onCancel={props.onClose} />)}\r\n            {!isCheckout && modalActions}\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default Cart;\r\n"]},"metadata":{},"sourceType":"module"}